{"version":3,"sources":["views/CastView.js"],"names":["CastView","movieId","useState","castList","setCastList","useEffect","fetchMoviesAPI","then","data","cast","map","actor","src","profile_path","alt","name","width","height","character","id"],"mappings":"0NAIe,SAASA,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QACjC,EAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAQA,OANAC,qBAAU,WACRC,IAAyBL,GAASM,MAAK,SAACC,GACtCJ,EAAYI,EAAKC,WAElB,CAACR,IAGFE,GACE,6BACGA,EAASO,KAAI,SAACC,GAAD,OACZ,+BACE,qBACEC,IAAG,0CAAqCD,EAAME,cAC9CC,IAAKH,EAAMI,KACXC,MAAM,MACNC,OAAO,QACT,6BAAKN,EAAMI,OACX,4CAAeJ,EAAMO,eAPdP,EAAMQ","file":"static/js/cast-view.77e8d63f.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as fetchMoviesAPI from \"../service/fetchMoviesAPI.js\";\r\n\r\nexport default function CastView({ movieId }) {\r\n  const [castList, setCastList] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchMoviesAPI.fetchCast(movieId).then((data) => {\r\n      setCastList(data.cast);\r\n    });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    castList && (\r\n      <ul>\r\n        {castList.map((actor) => (\r\n          <li key={actor.id}>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\r\n              alt={actor.name}\r\n              width=\"100\"\r\n              height=\"150\"></img>\r\n            <h3>{actor.name}</h3>\r\n            <p>Character: {actor.character}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n}\r\n\r\nCastView.propTypes = {\r\n  movieId: PropTypes.string.isRequired,\r\n};\r\n"],"sourceRoot":""}