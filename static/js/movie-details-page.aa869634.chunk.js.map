{"version":3,"sources":["views/views.module.css","views/MovieDetailsPage.js"],"names":["module","exports","Review","lazy","Cast","MovieDetailsPage","console","log","history","useHistory","location","useLocation","movieId","useParams","useState","movie","setMovie","useRouteMatch","url","path","useEffect","fetchMoviesAPI","then","onScrollPage","setTimeout","window","scrollTo","top","document","documentElement","clientHeight","behavior","className","s","moviecontainer","onClick","push","state","from","type","button","moviecard","poster","src","poster_path","alt","title","movieinfo","pageheading","vote_average","overview","genres","map","genre","name","join","additionalsection","link","to","pathname","fallback"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,OAAS,sBAAsB,UAAY,yBAAyB,OAAS,sBAAsB,eAAiB,8BAA8B,UAAY,yBAAyB,YAAc,2BAA2B,kBAAoB,iCAAiC,KAAO,sB,wJCYxSC,EAASC,gBAAK,kBAClB,gCAEIC,EAAOD,gBAAK,kBAChB,gCAGa,SAASE,IAAoB,IAAD,QACzCC,QAAQC,IAAI,oBACZ,IAAMC,EAAUC,cACVC,EAAWC,cACTC,EAAYC,cAAZD,QACR,EAA0BE,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsBC,cAAdC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KAEbC,qBAAU,WACRC,IAA4BT,GAASU,MAAK,SAACP,GACzCC,EAASD,QAEV,CAACH,IAEJ,IAIMW,EAAe,WACnBC,YAAW,WACTC,OAAOC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,aAEX,OAEL,OACE,mCACGhB,GACC,qCACE,sBAAKiB,UAAWC,IAAEC,eAAlB,UACE,wBAAQC,QAjBD,WAAO,IAAD,MACrB3B,EAAQ4B,KAAR,iBAAa1B,QAAb,IAAaA,GAAb,UAAaA,EAAU2B,aAAvB,iBAAa,EAAiBC,YAA9B,aAAa,EAAuB5B,gBAApC,QAAgD,MAgBb6B,KAAK,SAASP,UAAWC,IAAEO,OAAtD,qBAGA,sBAAKR,UAAWC,IAAEQ,UAAlB,UACE,qBACET,UAAWC,IAAES,OACbC,IAAG,0CAAqC5B,EAAM6B,aAC9CC,IAAK9B,EAAM+B,QAEb,sBAAKd,UAAWC,IAAEc,UAAlB,UACE,oBAAIf,UAAWC,IAAEe,YAAjB,SAA+BjC,EAAM+B,QACrC,6CAAgB/B,EAAMkC,aAAtB,OACA,oBAAIjB,UAAWC,IAAEe,YAAjB,sBACA,4BAAIjC,EAAMmC,WACV,oBAAIlB,UAAWC,IAAEe,YAAjB,oBACA,4BAAIjC,EAAMoC,OAAOC,KAAI,SAACC,GAAD,OAAWA,EAAMC,QAAMC,KAAK,eAGrD,sBAAKvB,UAAWC,IAAEuB,kBAAlB,UACE,oBAAIxB,UAAWC,IAAEe,YAAjB,oCACA,+BACE,6BACE,cAAC,IAAD,CACEhB,UAAWC,IAAEwB,KACbtB,QAAS,WACPZ,KAEFmC,GAAI,CACFC,SAAS,GAAD,OAAKzC,EAAL,SACRmB,MAAO,CAAEC,KAAI,iBAAE5B,QAAF,IAAEA,GAAF,UAAEA,EAAU2B,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,MAP5C,oBAYF,6BACE,cAAC,IAAD,CACEN,UAAWC,IAAEwB,KACbtB,QAAS,WACPZ,KAEFmC,GAAI,CACFC,SAAS,GAAD,OAAKzC,EAAL,YACRmB,MAAO,CAAEC,KAAI,iBAAE5B,QAAF,IAAEA,GAAF,UAAEA,EAAU2B,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,MAP5C,gCAeR,eAAC,WAAD,CAAUsB,SAAU,cAAC,IAAD,IAApB,UACE,cAAC,IAAD,CAAOzC,KAAI,UAAKA,EAAL,SAAX,SACE,cAACf,EAAD,CAAMQ,QAASA,MAEjB,cAAC,IAAD,CAAOO,KAAI,UAAKA,EAAL,YAAX,SACE,cAACjB,EAAD,CAAQU,QAASA","file":"static/js/movie-details-page.aa869634.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"poster\":\"views_poster__49bCd\",\"moviecard\":\"views_moviecard__j33uX\",\"button\":\"views_button__pTYBx\",\"moviecontainer\":\"views_moviecontainer__26YSG\",\"movieinfo\":\"views_movieinfo__pWQa8\",\"pageheading\":\"views_pageheading__1e-Nr\",\"additionalsection\":\"views_additionalsection__35Ine\",\"link\":\"views_link__2CBsg\"};","import { useState, useEffect, lazy, Suspense } from \"react\";\nimport {\n  Route,\n  NavLink,\n  useParams,\n  useRouteMatch,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\nimport * as fetchMoviesAPI from \"../service/fetchMoviesAPI.js\";\nimport LoaderView from \"../components/Loader/Loader\";\nimport s from \"./views.module.css\";\n\nconst Review = lazy(() =>\n  import(\"./ReviewsView\" /* webpackChunkName: \"review-view\" */)\n);\nconst Cast = lazy(() =>\n  import(\"./CastView\" /* webpackChunkName: \"cast-view\" */)\n);\n\nexport default function MovieDetailsPage() {\n  console.log(\"MovieDetailsPage\");\n  const history = useHistory();\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const { url, path } = useRouteMatch();\n\n  useEffect(() => {\n    fetchMoviesAPI.fetchDetails(movieId).then((movie) => {\n      setMovie(movie);\n    });\n  }, [movieId]);\n\n  const onGoBack = () => {\n    history.push(location?.state?.from?.location ?? \"/\");\n  };\n\n  const onScrollPage = () => {\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.clientHeight,\n        behavior: \"smooth\",\n      });\n    }, 1200);\n  };\n  return (\n    <>\n      {movie && (\n        <>\n          <div className={s.moviecontainer}>\n            <button onClick={onGoBack} type=\"button\" className={s.button}>\n              Go back\n            </button>\n            <div className={s.moviecard}>\n              <img\n                className={s.poster}\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt={movie.title}\n              />\n              <div className={s.movieinfo}>\n                <h2 className={s.pageheading}>{movie.title}</h2>\n                <p>User Score: {movie.vote_average} </p>\n                <h3 className={s.pageheading}>Overview</h3>\n                <p>{movie.overview}</p>\n                <h3 className={s.pageheading}>Genres</h3>\n                <p>{movie.genres.map((genre) => genre.name).join(\" , \")}</p>\n              </div>\n            </div>\n            <div className={s.additionalsection}>\n              <h3 className={s.pageheading}>Additional information</h3>\n              <ul>\n                <li>\n                  <NavLink\n                    className={s.link}\n                    onClick={() => {\n                      onScrollPage();\n                    }}\n                    to={{\n                      pathname: `${url}/cast`,\n                      state: { from: location?.state?.from ?? \"/\" },\n                    }}>\n                    Cast\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink\n                    className={s.link}\n                    onClick={() => {\n                      onScrollPage();\n                    }}\n                    to={{\n                      pathname: `${url}/reviews`,\n                      state: { from: location?.state?.from ?? \"/\" },\n                    }}>\n                    Reviews\n                  </NavLink>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <Suspense fallback={<LoaderView />}>\n            <Route path={`${path}/cast`}>\n              <Cast movieId={movieId} />\n            </Route>\n            <Route path={`${path}/reviews`}>\n              <Review movieId={movieId} />\n            </Route>\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}